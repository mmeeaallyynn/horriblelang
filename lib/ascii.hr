ascii is
    "\x00" "\x01" "\x02" "\x03" "\x04" "\x05" "\x06" "\x07" "\x08" "\t" "\n" "\x0b" "\x0c" "\r" "\x0e" "\x0f" "\x10" "\x11" "\x12" "\x13" "\x14" "\x15" "\x16" "\x17" "\x18" "\x19" "\x1a" "\x1b" "\x1c" "\x1d" "\x1e" "\x1f"
    \space "!" "'" "#" "$" "%" "&" "\'" "\(" "\)" "*" "+" "," "-" "." "/"
    "0" "1" "2" "3" "4" "5" "6" "7" "8" "9" ":" ";" "<" "=" ">" "?" "@"
    "A" "B" "C" "D" "E" "F" "G" "H" "I" "J" "K" "L" "M" "N" "O" "P" "Q" "R" "S" "T" "U" "V" "W" "X" "Y" "Z"
    "[" "backslash" "]" "^" "_" "`"
    "a" "b" "c" "d" "e" "f" "g" "h" "i" "j" "k" "l" "m" "n" "o" "p" "q" "r" "s" "t" "u" "v" "w" "x" "y" "z"
    "{" "|" "}" "~" "\x7f"
in

to-char is
    @ascii swap + get
in

read-char is
    result is _ in

    getc
    dup 27 == dup lambda
        swap @parse-escaped-char! -> @::result drop
    in jump?

    not lambda 
        @to-char! -> @::result
    in jump?

    @::result$
in

parse-escaped-char is
    drop
    getc drop
    getc

    dup 65 == lambda
        "up"
    in jump?

    dup 66 == lambda
        "down"
    in jump?

    dup 67 == lambda
        "right"
    in jump?

    dup 68 == lambda
        "left"
    in jump?
in

clear-screen is
    \space 27 + c + print
in

number-to-string is 
    buffer is _10 in
    idx is _ in
    0 -> @idx

    parse-loop is
        dup 10 % dup @::buffer @::idx$ + put
        @::idx @std::inc!
        - 10 /
        @::buffer @::idx$ 1 - + get swap
        dup 0 > loop?
    in
    | swap @parse-loop! drop

    "" lambda swap 48 + + in @lists::reduce!
in

set-position is
    "" 27 + 91 + 
    swap @number-to-string! +
    ";" +
    swap @number-to-string! +
    "H" +
    print
in

